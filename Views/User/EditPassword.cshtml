@model Calculator.Models.UserDto
<head>
    <link rel="stylesheet" href="~/css/popup.css" />
    <!-- Assurez-vous que Bootstrap est également inclus -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css" />
</head>
<div class="modal fade" id="exampleModal4" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title alert-heading fs-5 mx-lg-auto" id="exampleModalLabel" style="font-weight:bold; text-align:center; position :absolute; align-content:center; justify-content:center;">Modifier le mot de passe </h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="login-content  mt-xxl-5">
                    <form  id="editPasswordForm">
                        <input type="hidden" name="ArticleId" />
                        <div class="input-div one  ">
                            <div class="i">
                                <i class="fas fa-lock"></i>
                            </div>
                            <div class="div">
                               <input type="password" placeholder="Ancien mot de passe " name="oldPassword" id="oldpasswordField" style="color:black;" class="input">

                            </div>
                        </div>
                        <div id="oldPasswordError" class="text-danger"></div>

                        <div class="input-div one  ">
                            <div class="i">
                                <i class="fas fa-key"></i>
                            </div>
                            <div class="div">
                                <input type="password" placeholder="Nouveau mot de passe " name="newPassword"  id="newpasswordField" style="color:black;" class="input">
                            </div>
                        </div>


                        <div class="input-div one  ">
                            <div class="i">
                                <i class="fas fa-check"></i>
                            </div>
                            <div class="div">
                                <input type="password" placeholder="Confirmer le nouveau mot de passe " name="confPassword"  id="confpasswordField" style="color:black;" class="input">
                                
                            </div>
                        </div>
                        <div id="confPasswordError" class="text-danger"></div>


                        <input type="hidden" name="ArticleId" />

                        <div class="mt-4">
                            <button type="submit" class="btn" style="align-items:end; width: 30%;height: 40px;border-radius: 25px;outline: none;border: none;background-image: linear-gradient(to right, #32be8f, #38d39f, #32be8f);background-size: 200%;font-size: 1rem;color: #fff;">
                                Modifier
                            </button>
                        </div>
                    </form>
                </div>

               
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    document.getElementById('editPasswordForm').onsubmit = async function (e) {
        e.preventDefault(); // Empêche la soumission par défaut
        const token = '@Model.token';
        console.log("tokenprof", token);
        const Password = document.querySelector('input[name="oldPassword"]').value;
        const newPassword = document.querySelector('input[name="newPassword"]').value;
        const confPassword = document.querySelector('input[name="confPassword"]').value;
        console.log(JSON.stringify({ Password: Password, newPassword: newPassword, confPassword: confPassword }));
        // Ajout pour le débogage

        if (!token) {
             window.location.href = '/User/Login'; // Redirigez vers la page de connexion si le token n'existe pas
        } else {
            const response = await fetch('/User/EditPass', { // Corrigé ici
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}` // Ajouter le jeton ici
                },
                body: JSON.stringify({ Password: Password, newPassword: newPassword, confPassword: confPassword }) // Convertir les données en JSON
            });

            if (response.ok) {

                window.location.href = '/User/Profile'; // Redirection après la création réussie
            } else {
                const errorMessage = await response.text();
                console.error('Erreur:', errorMessage); // Afficher l'erreur dans la console
                console.error('Statut de la réponse:', response.status); // Afficher le statut de la réponse
                if (response.status === 401) {
                    // Rediriger vers la page de connexion
                    window.location.href = '/User/Login';
                } else {
                    // Alerte à l'utilisateur pour d'autres erreurs
                    alert('Erreur lors de la modification de mot de passe. Statut : ' + response.status);
                }
            }

        }
    };
</script>
