
@model ComponentDto

@{
    
}

<!DOCTYPE html>
<html>
<head>
    
    <link rel="stylesheet" type="text/css" href="~/css/Article.css">
    <link href="https://fonts.googleapis.com/css?family=Poppins:600&display=swap" rel="stylesheet">
    <script src="https://kit.fontawesome.com/a81368914c.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>
<div class="liste" style="width:100%; margin-left:0.5%;">
<h2  class="text-center title"> Liste des articles</h2>
<div class="row mb-5">
    <div class="col">
   </div>
    <div class="col">

    </div>
</div>

<table class="table">
    <thead>
        <tr>
                    <th>Nom <span class="label">de l'article</span> </th>
                   <!-- <th style="text-align: center;vertical-align: middle;">Prix <span class="label">HT</span></th>
                    <th style="text-align: center;vertical-align: middle;">TVA</th> -->
                    <th style="text-align: center;vertical-align: middle;">Prix <span class="label">TTC</span></th>
                    <th style="text-align: center;vertical-align: middle;"><span class="label">Nombre de</span> pièce</th>
                     <th style="text-align: center;vertical-align: middle;"><span class="label">Prix de</span> pièce</th>
            <th></th>
            <th></th>
            <th></th>
                    <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach(var article in Model.articles)
        {
            <tr>
                <th>@article.Name</th>
                            <!--   <th style="text-align: center;vertical-align: middle;" class="totalArticles">@article.ArticleComponents.Sum(c => c.Quantity * c.Price) DT</th>
            <th style="text-align: center;vertical-align: middle;">
                <input style="width:50px" type="number" class="tvaInput" placeholder="TVA" onchange="updateTtc(this)" /> %
            </th>-->
            <th style="text-align: center;vertical-align: middle;" class="totalWithTva">@article.ArticleComponents.Sum(c=>c.totalpriceTTC) DT</th>
            <th style="text-align: center;vertical-align: middle;">
                <input style="width:50px" type="number" class="pieceInput" placeholder="Pièce" onchange="updatepiece(this)" />
            </th>
                 <th style="text-align: center;vertical-align: middle;" class="pieceprix">0 DT </th>

        <th>
                            <a href="#" data-bs-toggle="modal" data-bs-target="#exampleModal2" data-article-id="@article.Id" data-article-Name="@article.Name" style="color:blue;cursor:pointer">
                        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                            <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                        </svg>
                            </a>
                        </th>
                        <th>
                            <a href="@Url.Action("Details", "Article", new { id = article.Id })" style="color:black">
                    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-chat-left-dots" viewBox="0 0 16 16">
                        <path d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z" />
                        <path d="M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0m4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0" />
                    </svg>

                            </a>
                </th>
                        <th>
                            <a href="@Url.Action("EditArticle", "Article", new { id = article.Id })" style="color:green;cursor:pointer ">
                            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                        <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                        <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" />
                                </svg>
                            </a>
                </th>
                        <th>
                            <a data-bs-toggle="modal" data-bs-target="#exampleModal" data-article-id="@article.Id" data-article-Name="@article.Name" style="color:red;cursor:pointer">
                            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                    <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z"/>
  <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z"/>
                                </svg>
                            </a>
</th> 
            </tr>
        }
    </tbody>
</table>
</div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var myModal = document.getElementById('exampleModal2')
              var myModal1 = document.getElementById('exampleModal')
            var confirmDeleteButton = document.getElementById('confirmDeleteButton');
            myModal.addEventListener('show.bs.modal', function (event) {
                // Récupérez l'élément qui a déclenché l'événement
                var button = event.relatedTarget;
                // Récupérez l'ID de l'article depuis l'attribut data
                var articleId = button.getAttribute('data-article-id');
                // Récupérez le nom de l'article depuis l'attribut data
                var articleName = button.getAttribute('data-article-Name');
                // Modifiez le texte du modal pour inclure l'ID
                var modalTitle = myModal.querySelector('.modal-title');
               
                modalTitle.textContent = '' + articleName;

                // Ajoutez l'ID de l'article comme champ caché dans le formulaire
                var form = myModal.querySelector('form');
                var hiddenField = form.querySelector('input[name="ArticleId"]');
                hiddenField.value = articleId;
            });

             myModal1.addEventListener('show.bs.modal', function (event) {
                // Récupérez l'élément qui a déclenché l'événement
                var button = event.relatedTarget;
                 // Récupérez l'ID de l'article depuis l'attribut data
                var articleId = button.getAttribute('data-article-id');
                // Récupérez le nom de l'article depuis l'attribut data
                var articleName = button.getAttribute('data-article-Name');
                // Modifiez le texte du modal pour inclure l'ID
                var modalTitle = myModal1.querySelector('.Nb');

                modalTitle.textContent = 'Vous êtes sur le point de supprimer : ' + articleName + ' ?';


                // Mettre à jour le champ caché avec l'ID de l'article
                var hiddenField = myModal1.querySelector('input[name="articleId"]');
                hiddenField.value = articleId;
                var hiddenField = myModal1.querySelector('input[name="type"]');
                hiddenField.value = "article";
               

              
                
            });
        });


             
function updateTtc(tvaInput) {
    // Récupérer la ligne parente du champ de TVA
    var row = tvaInput.closest('tr');

    // Récupérer le montant total des articles affiché dans la première colonne
    const totalArticles = (row.querySelector('.totalArticles').innerText.replace(' DT', '').replace(',', '.').trim()) || 0;


    // Récupérer la valeur de l'input de TVA
    const tva = parseFloat(tvaInput.value) || 0; // Valeur par défaut à 0 si non valide

    // Calculer le total TTC
   // const totalWithTva = totalArticles + (totalArticles * (tva / 100));
    const totalWithTva = (totalArticles * (1 + (tva / 100))).toFixed(3) ;
    
    // Mettre à jour la colonne TTC
    row.querySelector('.totalWithTva').innerText = totalWithTva.replace('.', ',') + ' DT';

            var pieceInput = row.querySelector('.pieceInput') ; // Récupérer l'input des pièces
            if (pieceInput.value > 0) {
        updatepiece(pieceInput); // Passer l'élément input à la fonction
    }
    
}

function updatepiece(pieceInput) {
     var row = pieceInput.closest('tr');
     const piece = parseFloat(pieceInput.value) || 0;
   // const piece = parseFloat(document.getElementById("pieceInput").value) || 0;
     const totalWithTva = (row.querySelector('.totalWithTva').innerText.replace(' DT', '').replace(',', '.').trim()) || 0;
  const pieceprix =  (totalWithTva / piece).toFixed(3);
 

   row.querySelector('.pieceprix').innerText = pieceprix + ' DT';

}


    
    </script>

</body>


<!-- Include the partial view for the modal -->
@await Html.PartialAsync("AddComponent")
@await Html.PartialAsync("DeleteArticle")
</html>