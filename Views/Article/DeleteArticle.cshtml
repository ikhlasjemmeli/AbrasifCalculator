@model Calculator.Models.ComponentDto
<head>
    <link rel="stylesheet" href="~/css/popup.css" />
    <!-- Assurez-vous que Bootstrap est également inclus -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css" />
</head>
<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title alert-heading fs-5" id="exampleModalLabel">Attention!</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-danger" role="alert">

                    <p style="font-size:1rem" class="Nb"> </p>

                    <p style="font-size:0.8rem" class="mb-0">Nb: <strong>Cette action est irréversible</strong> et entraînera la perte de toutes les données associées à cet article.</p>

                </div>
            </div>
              <div class="modal-footer">

            <form id="deleteArticleForm" method="post" action="/Article/DeleteArticle">
                <input type="hidden" name="articleId" id="articleId" value="" />
                    <input type="hidden" name="type" id="type" value="" />
                <button type="submit" class="btn btn-danger">Confirmer la suppression</button>
            </form>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    
    document.getElementById('deleteArticleForm').onsubmit = async function (e) {
        e.preventDefault(); // Empêche la soumission par défaut
        const token = '@Model.token';
       
        const id = document.querySelector('input[name="articleId"]').value;
        const type = document.querySelector('input[name="type"]').value;
       
        if (!token) {
            window.location.href = '/User/Login'; // Redirigez vers la page de connexion si le token n'existe pas
        } else {
            const response = await fetch('/Article/DeleteArticle', { // Corrigé ici
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}` // Ajouter le jeton ici
                },
                body: JSON.stringify({ Id: id, Type: type }) // Convertir les données en JSON
            });

            if (response.ok) {

                window.location.href = '/Article/Article'; // Redirection après la création réussie
            } else {
                const errorMessage = await response.text();
                console.error('Erreur:', errorMessage); // Afficher l'erreur dans la console
                console.error('Statut de la réponse:', response.status); // Afficher le statut de la réponse
                if (response.status === 401) {
                    // Rediriger vers la page de connexion
                    window.location.href = '/User/Login';
                } else {
                    // Alerte à l'utilisateur pour d'autres erreurs
                    alert('Erreur lors de la suppression de l\'article. Statut : ' + response.status);
                }
            }

        }
    };
</script>
