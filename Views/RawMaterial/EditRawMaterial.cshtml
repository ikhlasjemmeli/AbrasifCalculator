@model ListComponentDto

<!DOCTYPE html>
<html>
<head>
    <title>Modifier matière</title>
    <link rel="stylesheet" type="text/css" href="~/css/Ajout.css">
    <link href="https://fonts.googleapis.com/css?family=Poppins:600&display=swap" rel="stylesheet">
    <script src="https://kit.fontawesome.com/a81368914c.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>
    <img class="wave" src="~/images/wave.png">
    <div class="container">
        <div class="img">
            <img src="~/images/puzz.png" style="width:400px; height:400px;">
        </div>
        <div class="login-content mt-xxl-5">
            <form id="EditrawmaterialForm">
                <img src="~/images/av.png">

                <div class="input-div one">
                    <div class="i">
                        <i class="fas fa-signature"></i>
                    </div>
                    <div class="div">
                        <input type="text" name="rawmaterialName" placeholder="Nom du matière première" class="input" asp-for="Name" value="@Model.Name" id="rawmaterialName">
                    </div>
                </div>

                <div class="input-div one">
                    <div class="i">
                        <i class="fas fa-scale-balanced"></i>
                    </div>
                    <div class="div">
                        <input type="text" name="rawmaterialUnit" placeholder="Unité du matière première" class="input" asp-for="Unit" value="@Model.Unit" id="rawmaterialUnit">
                    </div>
                </div>

                <input type="hidden" name="rawmaterialId" id="rawmaterialId" value="@Model.Id" />

                <div class="buttons">
                    <input type="submit" class="btn" id="submitButton" value="Modifier" disabled>
                </div>
            </form>
        </div>
    </div>

    <script type="text/javascript" src="~/js/main.js"></script>
</body>
</html>

<script type="text/javascript">
    // Fonction pour valider si les champs sont remplis
    function validateForm() {
        const name = document.getElementById('rawmaterialName').value.trim();
        const unit = document.getElementById('rawmaterialUnit').value.trim();

        // Si les deux champs sont non vides, active le bouton
        if (name && unit) {
            document.getElementById('submitButton').disabled = false; // Activer le bouton
        } else {
            document.getElementById('submitButton').disabled = true; // Désactiver le bouton
        }
    }

    // Ajouter des écouteurs d'événements pour valider en temps réel
    document.getElementById('rawmaterialName').addEventListener('input', validateForm);
    document.getElementById('rawmaterialUnit').addEventListener('input', validateForm);

    // Soumission du formulaire
    document.getElementById('EditrawmaterialForm').onsubmit = async function (e) {
        e.preventDefault(); // Empêche la soumission par défaut

        const token = '@Model.token';
        const Name = document.querySelector('input[name="rawmaterialName"]').value;
        const Unit = document.querySelector('input[name="rawmaterialUnit"]').value;
        const id = '@Model.Id';

        console.log("ID:", id);
        console.log("Nom:", Name);
        console.log("Unité:", Unit);

        if (!token) {
            window.location.href = '/User/Login'; // Redirige vers la page de connexion si le token n'existe pas
        } else {
            const response = await fetch('/RawMaterial/EditRawMaterials', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}` // Ajouter le jeton ici
                },
                body: JSON.stringify({ Id: id, Name: Name, Unit: Unit }) // Convertir les données en JSON
            });

            if (response.ok) {
                window.location.href = '/RawMaterial/RawMaterial'; // Redirection après la modification réussie
            } else {
                const errorMessage = await response.text();
                console.error('Erreur:', errorMessage);
                console.error('Statut de la réponse:', response.status);
                if (response.status === 401) {
                    window.location.href = '/User/Login'; // Rediriger vers la page de connexion si le token est invalide
                } else {
                    alert('Erreur lors de la modification de la matière première. Statut : ' + response.status);
                }
            }
        }
    };
</script>
